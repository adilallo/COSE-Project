%YAML 1.1
%TAG !u! tag:unity3d.com,2011:
--- !u!114 &11400000
MonoBehaviour:
  m_ObjectHideFlags: 0
  m_CorrespondingSourceObject: {fileID: 0}
  m_PrefabInstance: {fileID: 0}
  m_PrefabAsset: {fileID: 0}
  m_GameObject: {fileID: 0}
  m_Enabled: 1
  m_EditorHideFlags: 0
  m_Script: {fileID: 11500000, guid: e9620f8c34305754d8cc9a7e49e852d9, type: 3}
  m_Name: COSE.Localization.Text_en
  m_EditorClassIdentifier: 
  m_LocaleId:
    m_Code: en
  m_SharedData: {fileID: 11400000, guid: 3fb16befcd89b2e4bbe08b7875cd111d, type: 2}
  m_Metadata:
    m_Items: []
  m_TableData:
  - m_Id: 2189404659712
    m_Localized: "This room looks analytically at the visual output of JODI\u2019s
      .com browser. Our argumentation includes hypotheses tactical moves. We dissect
      and then regroup the visual elements that are provided in the viewport of the
      monitor. Taking everything apart first and reassembling it later in different
      constellations, helps us to determine how or whether elements cluster dynamically
      in terms of space and (inter)activity. This room offers filters that suggest
      ways to see order in the browser output. These filters are sorting gestures
      such as: taking apart, isolating, staging, counting, labeling, marking, focusing,
      creating explanatory models as shortcuts of certain underlying \u2018mechanisms\u2019.
      We learn about the rules of the visual layers within the artwork and come to
      unexpected conclusions. Let\u2019s go!"
    m_Metadata:
      m_Items: []
  - m_Id: 10326936818540544
    m_Localized: 'The following inventory of the different types of elements that
      you may encounter in this browser is already ordered in the way how they overlap
      each other. Overlapping suggests depth and we show a layering structure based
      on the visual element types (not their size, not their time of appearance;
      later on, their colour will play a role). Learn about the GUI elements! They
      enter the scene on your left.


      PRESS ENTER TO BEGIN ANIMATION'
    m_Metadata:
      m_Items: []
  - m_Id: 10327070432288768
    m_Localized: "Some math: so far we have encountered 18 element types, and exemplified
      them with the red tab. But there are four more tabs. Taking some singular elements
      apart, and considering that some elements multiply over time, we have at least
      66 elements permanently present plus some ephemeral ones. That\u2019s a lot!
      It\u2019s easy to lose track of them. Moreover, there is a certain variance
      in how much presents itself to the users\u2019 eye in the browser as a whole."
    m_Metadata:
      m_Items: []
  - m_Id: 10327171980582912
    m_Localized: 'You can (cluster-)influence several elements on the screen by a
      single move. Find out which elements like hanging out with others! We refer
      to all elements that are simultaneously affected with one move with an umbrella
      term: complex.'
    m_Metadata:
      m_Items: []
  - m_Id: 10327237051015168
    m_Localized: Analyzing the behavior and occurrence of the elements in our inventory,
      several further groupings can be undertaken along specific parameters. Click
      on the words to see the highlights in the model.
    m_Metadata:
      m_Items: []
  - m_Id: 10327419750703104
    m_Localized: "In .com, the formatted-text \u2013 that comes closest to a website
      rendering \u2013 here sits at the very back. This raises the question of how
      the websites are actually presented. Does this artwork show us the \u2018backside\u2019
      of the websites? We\u2019ll try to find out. Let\u2019s explore this idea and
      inspect the tectonics of a tab field complex with all its elements."
    m_Metadata:
      m_Items: []
  - m_Id: 10328055108067328
    m_Localized: "The tab field complex is one of four functional clusters consisting
      of several elements. So let\u2019s meet these four complex protagonists in
      their full three-dimensionality!"
    m_Metadata:
      m_Items: []
  - m_Id: 11449771431550976
    m_Localized: "HTML-colour-field (\u201Ccc1\u201D): The HTML-colour-field remains
      \u2018empty\u2019 until one of its URLs leads to an existing website. It holds
      the HTML code of the website currently found by the browser. The colour is
      translucent as any text can shine through and overlapping with other HTML-colour-fields
      leads to characteristic colour changes.\n\n1/18"
    m_Metadata:
      m_Items: []
  - m_Id: 11450098411102208
    m_Localized: "grey-field (\u201Cgrey\u201D): The grey-field appears when a successful
      URL is retrieved. It seems to act as a place holder for the formatted-text
      that will then soon appear when the search is done. \n\n2/18"
    m_Metadata:
      m_Items: []
  - m_Id: 11450145353752576
    m_Localized: "formatted-text (\u201Ctt1\u201D): When the browser finds an existing
      webpage, the text on this website (and sometimes, also the HTML code in a formatted
      version) will be made visible and rendered in a black Times New Roman font.
      Links can be underlined and in blue, sometimes headlines are in another colour.
      The formatted-text takes up about half of the width of the screen and can fill
      it from the very top to the bottom (there could be less text). \n\n3/18"
    m_Metadata:
      m_Items: []
  - m_Id: 11450169500360704
    m_Localized: "middle-bar (\u201C64\u201D): The middle-bar is a thin triple-line
      in black-red-black along which two spheres of each colour (a total of ten spheres,
      consisting of middle-bar-formatted-text-balls and middle-bar-URL-balls) move
      when a search is being performed. It is unchangeable and the equivalent of
      a throbber that indicates internet activity. You can stop an active search
      process by clicking on this line \u2013 preferably on the left side. \r\n\n4/18"
    m_Metadata:
      m_Items: []
  - m_Id: 11450191373656064
    m_Localized: "history-URL (\u201Cbook1\u201D): This small URL shows each successfully
      retrieved website. The history-URL is black and is attached to the history-square
      on its left. The history-URL and history-square reside underneath the bottom
      left corner of the HTML-colour-field. Both move downwards row by row as new
      websites are found. \n\n5/18"
    m_Metadata:
      m_Items: []
  - m_Id: 11450212110295040
    m_Localized: "pentagon-line (\u201CVector Shape\u201D): The pentagon-line of
      a certain colour sits next to a pentagon-ball of the same colour. They are
      the edges of a distorted pentagon that can be repositioned by dragging the
      pentagon-balls. If one of the two pentagon-balls connected by the pentagon-line
      is repositioned, the pentagon-line will change in length and angle, according
      to the new coordinates. \n\n6/18"
    m_Metadata:
      m_Items: []
  - m_Id: 11450230280019968
    m_Localized: "HTML-text-field (\u201Caa1\u201D): When the browser succeeds in
      finding an existing website, the HTML code of this website appears in the HTML-text-field
      which sits inside the HTML-colour-field and dynamically adjusts to its size.
      If the subsequent search is unsuccessful, the HTML code of the former search
      remains in place. The HTML-text is rendered in a monospaced black font and
      can be edited. This editing does not alter the adjunct formatted-text. The
      HTML-text-field disappears when the adjunct pentagon-ball is positioned left
      or above the corresponding HTML-colour-field.\n\n7/18"
    m_Metadata:
      m_Items: []
  - m_Id: 11450252665020416
    m_Localized: 'URL-text-field ("getNetText One Field"): This field sits on the
      right side of the URL-square and displays the URL that the browser is currently
      calling for or has called (successfully or not) within the last round. The
      URL-text has the same colour as the HTML-colour-field it is attached to, except
      for the period of the calling itself. In this case, a correspondingly coloured
      URL-colour-field appears behind the URL then turning black. The URL-text-field
      vanishes when the adjunct pentagon-ball is positioned to the left of the corresponding
      HTML-colour-field.


      8/18'
    m_Metadata:
      m_Items: []
  - m_Id: 11450274391515136
    m_Localized: "history-square (no name): This small square sits below the bottom
      left corner of the HTML-colour-field and shares its colour. It is connected
      to the pentagon-ball as well, because changes in the position of the pentagon-ball
      are immediately followed by changes to the history-elements (square and URL).
      The HTML-colour-field is also affected although this does not adjust on the
      fly, but rather upon releasing the mouse. The tiny history-square mimics the
      URL-square, as it too is accompanied by a tiny URL on its right. The history-elements
      shift downwards a row when a new URL becomes \u2018historical\u2019. This means
      the history-square is the only element to multiply over time. \n\n9/18"
    m_Metadata:
      m_Items: []
  - m_Id: 11450297145614336
    m_Localized: "middle-bar-URL-text-field (\u201CgetNetText 1 Field\u201D): The
      middle-bar doubles the URL-text-field of each browser window. This middle-bar-URL-text
      is the same size and colour as the URL-text-field. When you make manual changes
      to the middle-bar-URL-text-field and press enter, these changes also become
      effective in the twin URL text and the URL calling is initiated. You can move
      the middle-bar-URL-text-field by horizontally dragging the middle-bar-URL-ball
      of the same colour that sits nearby on the middle-bar.\n\n10/18"
    m_Metadata:
      m_Items: []
  - m_Id: 11450315353088000
    m_Localized: "URL-colour-field: During the calling process, the URL-colour-field
      \u2013 a coloured bar such as you might see in a marking process but extended
      to the right \u2013 appears behind the URL you are searching for. It has the
      same colour as the tab field. As soon as the URL calling is over it disappears.
      It is a highly ephemeral phenomenon that cannot be interacted with.\n\n11/18"
    m_Metadata:
      m_Items: []
  - m_Id: 11450330909761536
    m_Localized: "URL-square (\u201CGet Button\u201D): A small square to the left
      of the URL and on top of the HTML-colour-field allows you to change the position
      of the HTML-colour-field and all elements around it. The URL-square has the
      same colour as the URL-text-field or the HTML-colour-field it is attached to.
      Double-clicking on the URL-square launches a corresponding URL calling.\n\n12/18"
    m_Metadata:
      m_Items: []
  - m_Id: 11450346613235712
    m_Localized: "middle-bar-URL-ball (\u201CGet Button\u201D): This small sphere
      is connected to the middle-bar-URL-text-field of the same colour on its (far)
      left. Double-clicking on this ball launches the corresponding search. During
      the URL calling, the middle-bar-URL-ball springs back and forth on the horizontal
      line, together with the according middle-bar-URL-text-field (while keeping
      the same distance).\n\n13/18"
    m_Metadata:
      m_Items: []
  - m_Id: 11450362652254208
    m_Localized: "pentagon-ball (\u201Cbal\u201D, not numbered): The pentagon-balls
      are the five vertices of a pentagon composed by five of these spheres and five
      sprites which we called pentagon-lines. The pentagon that can be repositioned
      or distorted by either dragging each pentagon-ball, or moving the colour field.
      The balls appear in the same five colour system as the browser window they
      are connected to. Depending on the current position of \u2018their\u2019 HTML-colour-field,
      they are either connected to its bottom right corner (per default) or \u2013
      when dragged around the HTML-colour-field \u2013 they can be optically detached
      from it, but their positions continue to define the height of the HTML-colour-field,
      the history-elements and the scrollbar.\n\n14/18"
    m_Metadata:
      m_Items: []
  - m_Id: 11450377848217600
    m_Localized: "middle-bar-formatted-text-ball (\u201CGet Button\u201D): This is
      a small sphere that is restricted to the middle-bar, but can be moved horizontally
      by picking it with the mouse. When you do this, any existing formatted-text
      is moved with it. The middle-bar-formatted-text-ball always sits on the left
      of the formatted-text. The middle-bar-formatted-text-ball has the same colour
      as the HTML-colour-field which carries the HTML-text-field corresponding to
      the formatted-text. \n\n15/18"
    m_Metadata:
      m_Items: []
  - m_Id: 11450394952589312
    m_Localized: "URL-calling-colour-field: During a URL calling process, two thirds
      or more of the width of today\u2019s screen seems to be bathed in the colour
      of the URL being searched for. It is translucent and a highly ephemeral phenomenon
      that cannot be interacted with.\n\n16/18"
    m_Metadata:
      m_Items: []
  - m_Id: 11450410953859072
    m_Localized: "scroll-bar: The grey scroll-bar seems to conform to the system
      configuration of the operating system used by the computer. It is next to the
      right side of the HTML-colour-field and fits its vertical size at any time
      (this can be changed using the adjunct pentagon-ball). Functionally, it is
      attached to the HTML-text-field and seems to allow you to navigate the HTML
      code. However, when you use it, the character-cache fills up until the text
      eventually gradually blacks out. \n\n17/18"
    m_Metadata:
      m_Items: []
  - m_Id: 11450426401480704
    m_Localized: "pointer: Shaped as a white arrow, cursor, or cross (depending on
      whether it hovers over colour fields, text fields or buttons) and part of your
      computer\u2019s operating system interface, the mouse allows you to interact
      with the browser. \n\n18/18"
    m_Metadata:
      m_Items: []
  - m_Id: 14744257666473984
    m_Localized: "tab field complex: Elements of a website-elements-cluster \u2018glued\u2019
      together are now termed a \u2018tab field complex\u2019. (1, 3, 5, 6, 7, 8,
      9, 12, 14, 17)"
    m_Metadata:
      m_Items: []
  - m_Id: 14744282471587840
    m_Localized: Some elements are more loosely connected to this tab field complex,
      by similarity (7+3)
    m_Metadata:
      m_Items: []
  - m_Id: 14744441314074624
    m_Localized: or identity (8+10)
    m_Metadata:
      m_Items: []
  - m_Id: 14744550017851392
    m_Localized: Some elements are singularities (4, 18)
    m_Metadata:
      m_Items: []
  - m_Id: 14744569357787136
    m_Localized: "Some elements may be temporarily \u2018empty\u2019, if no website
      has been found (7, 3)"
    m_Metadata:
      m_Items: []
  - m_Id: 14744587854667776
    m_Localized: Some elements have a contingent or search-dependent lifespan, they
      are stable as long as no search result replaces them (3, 7, 8, 10)
    m_Metadata:
      m_Items: []
  - m_Id: 14744596113252352
    m_Localized: "search performing complex: Some elements are even more ephemeral.
      They appear only in a performative manner during an active search process and
      disappear again as soon as the search is terminated. They are not accessible
      for the user and cause the eventfulness with each search. (2, 11, 16) Together
      with a hectic movement and generated sounds (not listed in this inventory of
      visual elements), they form the \u2018search performing complex\u2019."
    m_Metadata:
      m_Items: []
  - m_Id: 15081753889726464
    m_Localized: We have learnt that a tab field complex is a configuration distributed
      on different layers of depth. \n \n Showing all five tab field complexes simultaneously,
      this layered tectonic structure has an impact on how elements overlap. Until
      now, we have been dealing with element types. That does not mean that each
      type appears only once in the .com browser. In fact, most elements are present
      five-fold.
    m_Metadata:
      m_Items: []
  - m_Id: 15081801549602816
    m_Localized: 'What contributes much to the overall impression of inextricable
      complexity is the fact that the elements either overlap in an opaque manner
      or in a transparent manner. '
    m_Metadata:
      m_Items: []
  - m_Id: 15085678499979264
    m_Localized: "The tab field complex is attributed a flipping or turning window
      because on the one hand it is a window to the internet as it harbours the website
      content. On the other hand, the browser seems to provide a back-side view of
      websites in two different ways. The first of these is always provided, the
      second can be reached by interacting with it. Normally, the HTML code of a
      website is occluded from the users, who need to go an extra step to have it
      displayed in their commercial browser. In .com, the HTML-code fills what the
      users will interpret as the tab field complex in a rather large and easy to
      read font. It seems to have been brought closer for inspection than its formatted-text
      version.\r\n            The affordance of these two elements also underlines
      that reversal. The user can edit the HTML code text, but cannot even mark the
      formatted-text. Thus, JODI seem to swap surface and \u2018subface\u2019 (to
      use Frieder Nake\u2019s expression), that is, the GUI level and the code level.
      However, the HTML code can only be reworked if a second instance of flipping
      hasn\u2019t turned it away from the user\u2019s sight. So, what could turn
      the HTML-text-field \u2018away\u2019?"
    m_Metadata:
      m_Items: []
  - m_Id: 15085971283369984
    m_Localized: "The pentagon complex is shown here as two elements coupled, but
      it is optically complete only with all five pentagon complexes. As it also
      turns or flips parts of the website, it shares the same attribute as the tab
      field complex. coordinate value, but is position-sensitive and thus variable.
      Drawing a horizontal and a vertical line through this point, cuts the viewport
      plane into four sectors that have different \u2018properties\u2019 for this
      specific tab field complex."
    m_Metadata:
      m_Items: []
  - m_Id: 15086055844732928
    m_Localized: "The search facilitating complex is depicted by the red carpet it
      is rolling out for the users. Although not obvious at first glance, .com browser
      offers the user four different ways to start the web search for each website
      tab\r\nInterpretation: \r\nContrary to the general impression of bulkiness,
      in several ways .com surpasses conventional browsers in paving a way into the
      internet. First, each URL is present twice and both can be used to start a
      search. A search can be initiated by typing in a URL either in the URL-text-field
      or in the middle-bar-URL-text-field and pressing enter, or by double-clicking
      on the URL-square or on the middle-bar-URL-ball respectively. Thus, the opportunities
      to go and explore a website by chance or by intention are heightened/elevated."
    m_Metadata:
      m_Items: []
  - m_Id: 15086191815680000
    m_Localized: "The search performing complex symbolically waves a red flag as
      it seeks to gather all the user\u2019s attention. Even if users may be overwhelmed
      and have the impression that they need to fight to get to the internet content,
      the browser is actually emphasizing the core business of any browser, namely
      the event of the search process.\r\nHere, multiple instances indicate that
      something is happening. The URL calling process is accompanied by a hectic
      horizontal movement pushing around the corresponding URL, by sound, by a colour
      change of the URL and by various fields popping up: grey and the \u2018own\u2019
      colour, a field behind the URL. All these signals indicate that something is
      \u2018coming\u2019 from the internet. It is reminiscent of the good old letter
      shoot. While the website data parcel is underway, a specific sound accompanies
      its journey and a different gong advertises its arrival. The box can contain
      something or can be empty. In this light, the horizontal middle-bar containing
      the balls also mimics the old medium of postal transmission. The difference
      is only that their hectic back and forth movements symbolize the requirement
      in the networked world that the various bits and pieces of information must
      be gathered from different sites. The middle-bar indicates prominently that
      a search is taking place by serving as a highway for a nervous race. This is
      a rather different picture than the floating, orbiting and circling in outer
      space shown by other throbber animations.\r\nAnd all this performed excitement
      has yet another effect: the long waiting time that was a major part of the
      early days of the internet, here, is filled with action. Users can lean back
      and enjoy the spectacle. This kind of jingle-entertainment is performed by
      six elements. Isn\u2019t that again contributing to an improved user experience?"
    m_Metadata:
      m_Items: []
  - m_Id: 15104581330526208
    m_Localized: "There are four exceptions that do not turn black when overlapping:
      Yellow and cyan together turn green, moreover, yellow \u2018suffocates\u2019
      (has no effect) when overlapping with green or with red. Cyan \u2018suffocates\u2019
      in blue and green."
    m_Metadata:
      m_Items: []
  - m_Id: 15081846764199936
    m_Localized: JODI reduce their palette to six colours (plus white), magenta is
      missing.
    m_Metadata:
      m_Items: []
  - m_Id: 16505225660588032
    m_Localized: "From quality to quantity. Cascades of abstractions towards a \u2018dissonance
      value\u2019 in .com \r\nThis room explores the %WRONG Browser .com in terms
      of its dynamic and observable behaviour, independent of user interaction. The
      objective was to establish parameters for describing the usage of this browser
      in comparison to web browsers that follow the general convention in this category
      of technology. The deviations observed in %WRONG Browser .com, in relation
      to these conventions, are consolidated into a single metric termed the 'dissonance
      value.'\r\nCentral to the %WRONG Browser series, as well as much of JODI's
      body of work, is its deliberate departure from established norms and conventions
      within computer environments and software. These deviations disrupt the user's
      experience in a way that elicits emotions of frustration and overwhelm (Hinterwaldner
      et al. 2022)\U0001F56E. By identifying and extrapolating behaviours in the
      work that deviate from the conventional web browser experience, we can isolate
      a specific aspect of the work - its disorientation value - and dynamically
      represent it through an animated visualisation of the data.\r"
    m_Metadata:
      m_Items: []
  - m_Id: 16859494871982080
    m_Localized: The first stage operates on the premise that the %Wrong Browser
      is a functional web browser, making it suitable for comparison with an integrated
      conventional browser model. The consistency in time, in standardised functionality
      and layout of conventional browsers make them ideal benchmarks for assessing
      the extent and nature of interventions introduced by artistic web browsers.
    m_Metadata:
      m_Items: []
  - m_Id: 16859693484859392
    m_Localized: "\rThe second stage is based on the hypothesis that the primary
      deviations from conventional browsers lie in the properties of elements and
      program behaviours. To quantify these deviations, a runtime sample was segmented
      into the relevant \u2018puzzle pieces\u2019 or three categories to be observed."
    m_Metadata:
      m_Items: []
  - m_Id: 16859800024375296
    m_Localized: The third stage aims to generate quantitative data suitable for
      computer-based visualisation of the hypotheses developed in the initial two
      stages.
    m_Metadata:
      m_Items: []
  - m_Id: 16859907482443776
    m_Localized: The fourth stage aims to refine the data created in the third stage,
      in order to establish relationships between the different values and assign
      weights to them based on their impact on the deviation from conventional browsers.
    m_Metadata:
      m_Items: []
  - m_Id: 16867038289977344
    m_Localized: This model rearranges the elements of the %WRONG Browser .com along
      a more conventional display logic. This arrangement allows for a clearer comparison
      with the standardised structure of traditional browsers. It demonstrates that,
      while the arrangement and behaviour of the elements differ significantly, the
      fundamental elements are not themselves unusual.
    m_Metadata:
      m_Items: []
  - m_Id: 16907661189570560
    m_Localized: We pursued an approach that focused on identifying and categorizing
      the perceivable elements of the program (such as the visual elements of the
      GUI, auditory elements, and the dynamics of their behaviour). However, this
      approach could only reveal the rules underlying the dynamics, not the actual
      events themselves. To gain meaningful insight, the entire display, including
      its behaviour over time, would need to be considered. Therefore, we decided
      to abandon this path. The individual elements are described in the RED ROOM,
      and the rules underlying the dynamics are discussed in the CYAN ROOM.
    m_Metadata:
      m_Items: []
  - m_Id: 17907882602258432
    m_Localized: "In the centre of the application window, there is a triple line
      displaying small round elements (HTML-balls) and the URL text in colours matching
      the five content fields. During the loading process of web content for one
      of these fields, the coloured ball and accompanying text representing the field
      or tab move rapidly along this line, reminiscent of the loading icon commonly
      seen in many conventional web browsers, especially in the early 2000s. However,
      the position of the line (which is not adjustable by the user), situated in
      the middle of the display, disrupts this analogy by centering both the loading
      process and the erratic movement. \r\nIn the RED ROOM the loading icon is addressed
      as well."
    m_Metadata:
      m_Items: []
  - m_Id: 17909275484479488
    m_Localized: In JODI's .com web browser, webpage content is primarily presented
      in HTML format but split into two display fields. It allows for the concurrent
      display of up to five pages, resulting in six fields showing varying degrees
      of readable content, all of which is stripped of much of its original structure
      and design. This division is akin to a feature found in conventional browsers,
      accessible to users through the menu in the form of the developer tools view
      of a webpage. There are no visible home, back, stop, or refresh buttons to
      be found in the interface of the .com browser, which are typically prominent
      part of the menu bars in conventional web browsers.
    m_Metadata:
      m_Items: []
  - m_Id: 17911893766168576
    m_Localized: "A prototypical model was developed for the software visualisation
      tool SEE developed at the university of Bremen by Rainer Koschke's team 'Software
      Technology.' It consists of a colour coded representation of each GUI element
      as nodes in a GXL graph. On a time axis, these elements stand in a dynamic
      connection to the categories described in the image to your right. The heights
      of the blocks represent a translation of the specific behaviour into a numeric
      value; the width an accumulation of the previous heights\u2019 values, to see
      it evolve over time. However, soon it became apparent that the relationship
      between the behaviour of the eight categories was unclear and too complex."
    m_Metadata:
      m_Items: []
  - m_Id: 17912202156564480
    m_Localized: 'We established preliminary categories to describe the behaviour
      of the element system in the display: fullness, emptiness, layering, movement,
      stillness, connection, organization, and time. However, this approach posed
      numerous obstacles, including accurately defining and applying the categories,
      as well as the challenge of tracking all 66 elements individually across them.
      The task quickly escalated into a big data problem, making it practically impossible
      to handle for a human observer. Therefore, we decided to abandon this path.
      All 66 elements are described in the RED ROOM.'
    m_Metadata:
      m_Items: []
  - m_Id: 17917248818634752
    m_Localized: 'This model is a first thought experiment about a three dimensional
      object created from the values in the data set. Each slice would represent
      the dissonance parameter value for the duration of two seconds, creating a
      timeline on the x-axis, the dissonance value in the y-axis and leaving the
      z-axis of a 3-dimensional environment without any meaningful value.

      The
      dissonance value would be experienceable through the decreasing of space available,
      which was included into the final visualisation.'
    m_Metadata:
      m_Items: []
  - m_Id: 17954318094163968
    m_Localized: 'We developed parameters to capture deviations from conventional
      browser behaviour, distinguishing between major movements [image of a dark
      blue puzzle piece] (changes in the composition of HTML fields) and minor movements
      [image of a light blue puzzle piece] (the rapid movement of URL balls along
      the throbber line during the loading process). Although autonomous movement
      is not uncommon in conventional browsers (especially on early web pages where
      GIFs and other animated elements were prevalent), the rearrangement of tabs
      or browser windows is an intrusion into the agency that usually lies with the
      user of an application. A third parameter, given the name clustering [image
      of a green puzzle piece], is based on the layering of elements within the display. '
    m_Metadata:
      m_Items: []
  - m_Id: 18713684137205760
    m_Localized: 'To avoid a big data problem, we reduced the sample size to a 10-minute
      screen recording of the application''s actions and focused exclusively on the
      autonomous behaviour of the program in the absence of user interaction. The
      user-independent behaviour is directly traceable in the source code. However,
      multidimensional factors within the hardware and software environment, coupled
      with the randomness of HTML field positioning, URL generation, and the unpredictability
      of content associated with these URLs, prevents knowledge about the factual
      layout the user will find displayed at any given moment.

      The generation
      of the URLs and randomness is addressed more throughly in the CYAN ROOM.'
    m_Metadata:
      m_Items: []
  - m_Id: 18716717835345920
    m_Localized: The analysis of the screen recording uses seconds as its time unit.
      When the composition of the elements changed, a screenshot was taken, including
      the timestamp of the video editing tool, Movavi Video Editor. This process
      resulted in 79 screenshots.
    m_Metadata:
      m_Items: []
  - m_Id: 18719340261007360
    m_Localized: To estimate the percentage distribution of colours in each uploaded
      image, we used the online tool 'Image Color Extract.' The resulting values
      for each screenshot were evaluated with the premise that a higher value for
      the dominant colour corresponded to less space available for other elements.
      For example, if white emerges as the dominant colour, it indicates a significant
      portion of the screen is taken by the background, necessitating other elements
      to cluster in the remaining space. Similarly, a substantial percentage of black
      and grey was considered to indicate clustering, as black only appears when
      elements overlap or when formatted-text fields are densely layered. The text
      within the HTML field did not significantly influence the black ratio and,
      therefore, had minimal impact on the value. Grey, on the other hand, mainly
      emerges as an ephemeral field during the loading process of a new page and
      does not convey any discernible information. In most cases, the clustering
      factor resulted from the combination of white, black, and occasionally grey.
      The clustering factor value was then calculated as a sum of the percentages
      of the relevant colours for each screenshot.
    m_Metadata:
      m_Items: []
  - m_Id: 18723690303709184
    m_Localized: 'First, the two types of autonomous movement are parameterised:
      significant movements of the HTML fields, and the smaller but fast movements
      of the URL balls along the throbber line during the loading process. The major
      movements are counted as an event in the seconds of the recording where it
      occurs. Minor movements, on the other hand, are not associated with individual
      ball movements along the throbber line, but are treated as continuous and collective
      movements of the balls, measured in seconds. To account for the greater influence
      of major compositional movements, they are weighted by a factor of ten, while
      minor movements of the balls are counted as one per second.'
    m_Metadata:
      m_Items: []
  - m_Id: 18724595774251008
    m_Localized: The value of the third parameter, the clustering, is a percentage
      ratio tied to the time unit in the same manner as the minor movements. The
      clustering factor's value is converted into its decimal equivalent and then
      multiplied by 100.
    m_Metadata:
      m_Items: []
  - m_Id: 18725207236665344
    m_Localized: "To streamline the runtime of a time-based visualisation cycle,
      each second of the 600-second screen recording  is condensed into two-second
      intervals. The movements for each two-second unit are then added to the clustering
      value, resulting in the \u2018dissonance value.\u2019 The dissonance value
      characterises the perceivable dissonance created by %WRONG Browser .com when
      compared to a web browser conforming to the general conventions of this technology
      category."
    m_Metadata:
      m_Items: []
  - m_Id: 18731383693238272
    m_Localized: 'Warning!

      The environment that you are about to enter contains
      elements such  as flashing lights and fast movements. If you have a history
      of photosensitive epilepsy, seizures, or other medical conditions that can
      be triggered by rapidly changing visual stimuli, we strongly advise against
      entering this environment.

      You can exit the animation any time by pressing
      x on your keyboard.'
    m_Metadata:
      m_Items: []
  - m_Id: 16859981620961280
    m_Localized: ' '
    m_Metadata:
      m_Items: []
  - m_Id: 29570761789267968
    m_Localized: 'Welcome to the room of ir/regularity! This room analyses event-related
      aspects of .com that play out in time (instances of change) and space (positionings).
      We will analyze unpredictability from coded behaviors, which causes ambiguity
      in user perception and turns regularity to irregularity. '
    m_Metadata:
      m_Items: []
  - m_Id: 29578243530022912
    m_Localized: Randomness is often associated with uncontrollable noise and unpredictability.
      In computational contexts, a random-function gets a pseudo-random value within
      a certain range. Its usage to create sophisticated patterns in computer-generated
      art can be traced back to 1962. Randomness is often associated with uncontrollable
      noise and unpredictability. In computational environments, a random-function
      can be assigned a pseudo-random value within a certain range. The use of pseudo-random
      values in creating sophisticated patterns in computer-generated art can be
      traced back to 1962. Since then, applied programmed pseudo-randomness has been
      found in a variety of domains in the arts. Ever since applied programmed pseudo-randomness
      can be found in a variety of domains in the arts.
    m_Metadata:
      m_Items: []
  - m_Id: 29587277276504064
    m_Localized: "In JODI\u2019s .com browser, the visual complexity comes from both,
      coded multi-layer patterns and random-functions entangling regularity with
      irregularity. This happens by design or in our perception. When regular patterns
      exceed the user\u2019s ability to comprehend them visually, the border between
      regularity and irregularity blurs and the patterns are rendered as confusion
      and ambiguity. Join us in our analysis step by step!"
    m_Metadata:
      m_Items: []
  - m_Id: 29587516628656128
    m_Localized: 'This unpredictability is classified into two types: primary and
      secondary. The primary type occurs when a programmed determinacy is misinterpreted
      and perceived as indeterminacy, irregularity, or confusion. The secondary type
      lies in the fact that the browser sources internet data through cables and
      connections. This complex physical and semantic system adds a true element
      of chance. '
    m_Metadata:
      m_Items: []
  - m_Id: 29588183787233280
    m_Localized: ' '
    m_Metadata:
      m_Items: []
  - m_Id: 29598665122242560
    m_Localized: 'There is a strict regularity in the temporal pattern of when a
      new URL-call is launched in .com browser. It is defined in the source code:
      The URL-call activation function is initiated every 80 (for the red tab), 90
      (green), 100 (blue), 110 (yellow), and 120 (cyan) seconds. '
    m_Metadata:
      m_Items: []
  - m_Id: 29600353975525376
    m_Localized: You can also verify this regularity with a targeted empirical and
      time-measurement-assisted observation. Let us check that! Start the process
      (here sped up 5x) by clicking on the color circles and compare how that plays
      out in the browser itself!
    m_Metadata:
      m_Items: []
  - m_Id: 29684493789945856
    m_Localized: 'One eye on the runtime, the other on measuring the time, we can
      confirm the moment of initiating a URL-call repeats regularly for each browser
      tab. '
    m_Metadata:
      m_Items: []
  - m_Id: 29924994416750592
    m_Localized: 'However, as JODI decided to allow not just one website tab to be
      displayed but five simultaneously, it becomes challenging to keep track of
      the different renewal cycles. '
    m_Metadata:
      m_Items: []
  - m_Id: 29925287355330560
    m_Localized: 'Special conclusion:

      So, what is confusing, given the programmed
      regularity? The interlacing of 5 regularities!'
    m_Metadata:
      m_Items: []
  - m_Id: 29925712620007424
    m_Localized: 'Putting all five URL-call opportunities together, we can be sure
      a change happens every 10 to 80 seconds. Mathematics helps determining that
      the big cycle of all 5 tabs repeats after 660 minutes. '
    m_Metadata:
      m_Items: []
  - m_Id: 29926930515865600
    m_Localized: 'Finding this regularity empirically, needs a concentrated and analytic
      approach. On average, users will probably collect impressions more intuitively.
      Thus, here we have the first instance of the primary type of unpredictability. '
    m_Metadata:
      m_Items: []
  - m_Id: 29927287832817664
    m_Localized: "The user\u2019s instinct to interact, paradoxically, minimizes
      the chances to grasp the programmed determinate order. "
    m_Metadata:
      m_Items: []
  - m_Id: 29927589696876544
    m_Localized: 'Moreover, please note: The temporal pattern described is undisturbed
      only if the user remains inactive. If you launch a URL-call by clicking, this
      will add a dynamic and thus obfuscate the strict system-side pattern. '
    m_Metadata:
      m_Items: []
  - m_Id: 29937193902256128
    m_Localized: 'The temporal events of URL-calls trigger a spatial re-arrangement.
      Thus, temporal and spatial dimensions are coupled in .com. '
    m_Metadata:
      m_Items: []
  - m_Id: 29937430913986560
    m_Localized: "Let us learn about how randomness is implemented in JODI\u2019s
      .com browser. The browser is written in the scripting language Lingo. It integrates
      the \u201CLinear Congruential Generator\u201D which is one of the earliest
      and best-known pseudorandom number generator algorithms. In .com, the random-function
      generates unpredictability in the spatial arrangement and in the creation of
      the URLs."
    m_Metadata:
      m_Items: []
  - m_Id: 29939078801502208
    m_Localized: In this section you encounter magenta filters. They are not part
      of the browser, but help visualize the restricting framework within which the
      programmed randomness rules.
    m_Metadata:
      m_Items: []
  - m_Id: 30046259257389056
    m_Localized: "The second-level domain for each URL-call is generated by applying
      a random function three times to get three characters from a collection of
      26 letters of the Latin alphabet and 0-9 Arabic numbers. The three generated
      characters are inserted between \u201Chttp://www.\u201D and \u201C.com\u201D."
    m_Metadata:
      m_Items: []
  - m_Id: 30049187519115264
    m_Localized: These are a collection of the .com program launching moments, the
      random position of the URL-squares, and thus the tab-fields, are decided by
      a random function. The random value for their horizontal position is always
      an integer between 0 and 600 that is a multiple of 14. In a full HD (1920*1080px)
      screen, for example, there will be 137 horizontal positions and 1080 vertical
      positions where the initial position of the 5 URL-squares can be placed. The
      magenta lines indicate all the possible areas.
    m_Metadata:
      m_Items: []
  - m_Id: 30051498521899008
    m_Localized: "The position of a URL-square decides the position of the URL-text-field
      (the left screenshot), and the corresponding pentagon-ball (the middle screenshot).
      Then the positions of the URL-square and the pentagon-ball decide the position
      of the field in between, which is a HTML-colour-field (\u201Ccc1\u201D) (the
      right screenshot). "
    m_Metadata:
      m_Items: []
  - m_Id: 30052099301421056
    m_Localized: "The way these elements are defined in the code, namely in dependency
      of each other\u2019s location, offers yet another predictability and supports
      the hypothesis that elements can be regarded as clustering into complexes."
    m_Metadata:
      m_Items: []
  - m_Id: 31465896264183808
    m_Localized: "When a new URL-call starts, the URL-square do no longer stick to
      the 14-pixel-raster. As a result of the new random () calculation, the horizontal
      position of the new URL-square will be a random number between 0 and (monitor
      width \u2013 300 pixel), and the vertical position value will be a random number
      between 0 and (monitor height \u2013 200 pixel). Thus, the URL-squares will
      always fall inside the magenta area you see in front of you right now, but
      this holds not necessary for the tab-field as a whole. "
    m_Metadata:
      m_Items: []
  - m_Id: 31468200610607104
    m_Localized: "We can see that in .com, random-functions are curbed to accommodate
      JODI\u2019s arranged restrictions, while nonetheless creating visual unpredictability
      every time a new URL-call happens. Although we are able to locate the potential
      scope of the next event after examining the code, it is hard to predict its
      exact location. "
    m_Metadata:
      m_Items: []
  - m_Id: 31470809748713472
    m_Localized: 'This randomness you might have noticed already! In case .com operates
      on auto-pilot mode, how does it determine the URLs it calls? '
    m_Metadata:
      m_Items: []
  - m_Id: 31482073019428864
    m_Localized: "The initial horizontal positions of middle-bar-URL-balls (sprites
      96\u2013100) are randomly assigned within the monitor\u2019s width value. The
      random position number of a middle-bar-URL-ball also determines the position
      of its adjunct middle-bar-URL-text, as the latter always sits 581 pixels to
      its left."
    m_Metadata:
      m_Items: []
  - m_Id: 31482639120445440
    m_Localized: "Similar to the URL-square, the reshuffled positions of middle-bar-URL-balls
      follow a different random() calculation. When a new URL-call starts, the horizontal
      position of a middle-bar-URL-ball is calculated as: (monitor width) \u2013
      (a random integer between 0 and 400 that is also a multiply of 14). \r\nTake
      a standard full HD screen for example, the new searches will appear only between
      the 1520px to 1920px area of the screen, which is the magenta area you see
      here."
    m_Metadata:
      m_Items: []
  - m_Id: 31483720806281216
    m_Localized: "The hard coded restriction makes the browser elements mass on the
      right side of the browser when we run it on today\u2019s modern monitor. This
      is another regularity we can observe without knowing the mechanism behind."
    m_Metadata:
      m_Items: []
  - m_Id: 31484560011014144
    m_Localized: "Let\u2019s recap what we just explored: When the browser is running
      without interruption, the regularity lies in the temporal occurrence and the
      spatial scope given by random-functions. The irregularity lies in the unpredictability
      of the exact spatial locations where the browser elements will appear, the
      generated URL results and the retrieved HTML contents. "
    m_Metadata:
      m_Items: []
  - m_Id: 31484598984486912
    m_Localized: "However, the line between regularity and irregularity is not always
      so clear. When we confront .com with the logic of a \u201Cnormal\u201D browser
      in our mind, then confusion is inevitable. When there are at least 16 elements
      potentially moving on the screen simultaneously, with the pixel as the spatial
      unit and the fraction of a second as the time unit, our sensory apparatus has
      a difficult time \u201Cfollowing\u201D these changes even if all they take
      place in a regulated pattern. Consequently, this irregularity is non-perceived
      regularity. The coded regularity and emergent irregularity constitute the primary
      types of unpredictability in the .com browser."
    m_Metadata:
      m_Items: []
  - m_Id: 32853732059242496
    m_Localized: "The position of the formatted-text (\u201Ctt1\u201D) is decided
      by the middle-bar-URL-ball\u2019s position. While the formatted-text always
      starts at the top of the monitor, its left border is 576 pixels to the left
      of the corresponding coloured middle-bar-URL-ball. Interestingly, due to the
      middle-bar-URL-balls\u2019 restricted settling area, the formatted-text is
      also distributed on the right side of the screen. Take a full HD screen as
      an example again, the range of the left edge of the formatted text will be
      between 944 pixels and 1344 pixels."
    m_Metadata:
      m_Items: []
  - m_Id: 32871207765270528
    m_Localized: 'Special Conclusion:

      So, what is taming the programmed randomness?

      C:
      Couplings of elements

      B: Imposed grid structure

      A: Small number
      of characters'
    m_Metadata:
      m_Items: []
  - m_Id: 32873862256386048
    m_Localized: "Do you remember what a web browser, and thus .com, too, does? The
      .com browser retrieves HTML files from the web server and renders it on users\u2019
      screen . If the website uses an external framework, the content will not be
      rendered properly with .com as the library is not loaded. It is an ir/regularity
      shaped by the technical trends and developments within the internet ecosystem
      and made perceivable by JODI\u2019s .com."
    m_Metadata:
      m_Items: []
  - m_Id: 32874010600529920
    m_Localized: The secondary type of unpredictability lies in the fact that the
      browser retrieves internet data with the URL-call (getNetText() function),
      which is conducted via domain names, servers, cables, ports and hardware and
      software environments. In this sense, the ir/regularity here is on a different
      temporal and spatial scale, from where a complex physical and semantic system
      comes into play adding actual chance.
    m_Metadata:
      m_Items: []
  - m_Id: 32874235650105344
    m_Localized: "The secondary type of unpredictability lies outside of the .com
      browser\u2019s coded events and users\u2019 perception."
    m_Metadata:
      m_Items: []
  - m_Id: 32874391225229312
    m_Localized: 'The impression that .com provides a clear insight of the inner
      workings of the internet turns erroneous in other aspects, however. '
    m_Metadata:
      m_Items: []
  - m_Id: 32876640823402496
    m_Localized: "When a call is made to a URL, it is documented in the history elements
      (squares and URLs) underneath the tab-field if it successfully retrieved the
      website data. If the website is empty and the retrieved content is nothing
      \u2013 the web contents from the previous URL remains in the HTML-text-field,
      leaving our observation glitched. \r\nOut of synch: We end up with an inconsistency:
      New address \u2013 old content. For the ones who pay very close attention,
      paradoxically, that adds confusion again!"
    m_Metadata:
      m_Items: []
  - m_Id: 32882177803804672
    m_Localized: The double occurrence of chance in the secondary type of unpredictability,
      conjoins with the programmed determinacy and perceived indeterminacy. This
      conjunction produces a dynamic coexistence of regularity and irregularity.
      This is apparent in the coded parameters and random-functions but mainly it
      is created through a dialogue with user observations, interventions, and perceptions
      and the relationships in a complex physical and semantic web condition.
    m_Metadata:
      m_Items: []
  - m_Id: 39900343851802624
    m_Localized: "Net.art.works come to life when \u2018executed\u2019. Combining
      static and dynamic code analysis \r\nWelcome to the code forensics! In this
      room of dissection, we are going to use several forensic tools to find out
      more information about .com than what can be seen on our monitor while running
      the browser. "
    m_Metadata:
      m_Items: []
  - m_Id: 39900921864642560
    m_Localized: "Director\u2019s Slang. The programming environment, its language
      and their key command\r\nJODI wrote their browsers in the multimedia authoring
      software Macromedia Director with the programming language Lingo. Lingo is
      an object-oriented scripting language native to this programming environment. "
    m_Metadata:
      m_Items: []
  - m_Id: 39901229202268160
    m_Localized: "Anything specific about it? \nYes. The programming environment
      Director retains many features a filmic or theatric logic would imply. Labels
      like the \u2018Main Movie Scripts\u2019 evoke an orchestration of different
      bits and pieces. The latter are stringed as if they were on a timeline of a
      video editing tool, except that the linearity can be broken up by putting commands
      with recursions on that \u2018score\u2019."
    m_Metadata:
      m_Items: []
  - m_Id: 39901383095476224
    m_Localized: "What was it used for? \nFrom the early 1990s, Macromedia Director
      was mainly used to create CD-ROMs and Kiosks. It allowed simultaneous actions
      like scrolling and typing."
    m_Metadata:
      m_Items: []
  - m_Id: 39901557935038464
    m_Localized: "But then \u2026 \nAt the beginning of the 2000s, for many programming
      artists, this piece of software was the gateway or a bridge from local network
      design on a data disk to a global multi-authored network: the Internet. The
      magic command \u201CgetNetText\u201D was first implemented in 1999. This feature
      was also exploited by JODI for their %WRONG Browser series."
    m_Metadata:
      m_Items: []
  - m_Id: 39941072351387648
    m_Localized: "In this contribution, we abstain from a thorough analysis of the
      source code of .com as Martina Richter provided exemplary and extensive analyses
      of this for JODI\u2019s .co.kr browser elsewhere. "
    m_Metadata:
      m_Items: []
  - m_Id: 39941432071675904
    m_Localized: Instead, we focus our attention on the executable of the programmed
      artwork and treat it with a broad spectrum of forensic methods. Thus we present
      information about the adopted analytic tools as well as what they allow us
      to reveal of the artwork.
    m_Metadata:
      m_Items: []
  - m_Id: 39944282004774912
    m_Localized: 'The %WRONG Browsers is a series! There are 11 different ones, each
      one for Macintosh and Windows machines, and they evolved over time. We see
      that with the Wayback Machine from the Internet Archive and the download website:
      http://wrongbrowser.jodi.org/'
    m_Metadata:
      m_Items: []
  - m_Id: 39946154052673536
    m_Localized: Let us look into the exe file! We picked the current version of
      .com.exe from here! http://wrongbrowser.jodi.org/wrongbrowsercom/win/com.zip
    m_Metadata:
      m_Items: []
  - m_Id: 39947457097097216
    m_Localized: "What can we learn from the metadata revealed by a right-click on
      the file?\na)\_\_\_ It is 8,5 MB big\nb)\_\_\_ It was created with Adobe Director
      11.5\nc)\_\_\_\_ It was created on August 13, 2021"
    m_Metadata:
      m_Items: []
  - m_Id: 39949391707234304
    m_Localized: As the work is dated 2001-2005, the relatively new version reveals
      that JODI have reworked the %WRONG Browser recently. But was this the first
      revamp?
    m_Metadata:
      m_Items: []
  - m_Id: 39950747130126336
    m_Localized: "A look into the past reveals: it was not the first revamp.\r\nWhat
      to do with that? \nWe can do comparisons! We can compare them in a synchronous
      way across the different browsers and in a transversal way along the historical
      dimension."
    m_Metadata:
      m_Items: []
  - m_Id: 39952315766267904
    m_Localized: "And what are these comparisons good for? \nIn the literature, the
      browser series is usually treated as a monolithic block, dated from 2001\u20132005.
      However, the browsers are different! And wouldn\u2019t it be interesting to
      find out how each one of them developed over time?"
    m_Metadata:
      m_Items: []
  - m_Id: 39954490370285568
    m_Localized: By extracting the time stamp of when the individual browsers were
      made, we see that most of them have more than two versions. Have a look at
      our table! This is what we could extract from the Wayback Machine! The browser
      in question, com.exe, counts amongst the earliest versions that were put online.
      In fact, it is one of the two first %WRONG Browsers!
    m_Metadata:
      m_Items: []
  - m_Id: 39953458491809792
    m_Localized: 'By using ExifTool, we found out the size of the exe file changed
      from c. 2.5 MB to c. 4 MB to later 8 MB. We could match that with the ever-new
      releases JODI used to bring the files up-to-date. '
    m_Metadata:
      m_Items: []
  - m_Id: 39959607270170624
    m_Localized: 'Some browsers with national domain names were developed specifically
      due to an occasion to participate in an exhibition. Have a look where the %WRONG
      Browsers were on show in the past! What can be derived from this inquiry into
      the historical dimension of the program versions? '
    m_Metadata:
      m_Items: []
  - m_Id: 39960269957619712
    m_Localized: 'It is plausible to set 2001 as the date when JODI came up with
      the idea of a possibly open-ended %WRONG Browser series. '
    m_Metadata:
      m_Items: []
  - m_Id: 39961421575086080
    m_Localized: 'Depending on the status you decide to attribute to program updates,
      there is some justification for not changing the date of the artwork with every
      software update. '
    m_Metadata:
      m_Items: []
  - m_Id: 39961553569832960
    m_Localized: "However, we were unable to find evidence that would support dating
      all browsers of this series to 2001\u20132005. "
    m_Metadata:
      m_Items: []
  - m_Id: 39961999038472192
    m_Localized: As can be seen, some browsers seem to have come into existence not
      earlier than 2007 or 2012.  What to do with that? Big question mark!
    m_Metadata:
      m_Items: []
  - m_Id: 39962252240216064
    m_Localized: 'Versions and variety: Taking the series and its evolutionary dimension
      seriously

      Within the timeline of their creation and updates, a pattern
      of when JODI returned to the %WRONG Browser series to broaden their repertoire
      becomes discernible. Suddenly, we have a basis for drawing comparisons over
      time and across applications. Thus, we get a certain feel for the evolution
      of the browsers.

      Whenever the exe file is available, there are two principal
      analytic approaches that we can pursue: In a first step, this contribution
      uses tools that work within the realm of a static approach. This means most
      of the time, we look at the exe file characteristics, while at times we poke
      deeper into the coded substance/fabric. In a second step, a dynamic approach
      is pursued. In this case, we look at the processes during runtime.'
    m_Metadata:
      m_Items: []
  - m_Id: 39962602271662080
    m_Localized: 'In the following, we look at the executable using different software
      tools. Thus, we highlight different aspects of what it contains. '
    m_Metadata:
      m_Items: []
  - m_Id: 39964212720820224
    m_Localized: When opening the exe of .com in a text editor, at first only the
      printable bytes are displayed.
    m_Metadata:
      m_Items: []
  - m_Id: 39965699811303424
    m_Localized: Using the tool Strings.exe, large parts of the original source code
      can be seen, as well as all kinds of libraries and the system functions used.
    m_Metadata:
      m_Items: []
  - m_Id: 39971338700709888
    m_Localized: "Moreover, other artifacts are to be found that allow conclusions
      to be drawn for example about the artists\u2019 data organization. When looking
      through the four exe versions retrieved over the Wayback Machine. Here we see
      how JODI saved the .com files throughout the years. It is a bit like peeking
      into their virtual work place."
    m_Metadata:
      m_Items: []
  - m_Id: 42476061354180608
    m_Localized: First we use an image viewer capable of opening a bitmap picture.
      Why? Aren't we about to analyze code = text? Go downstairs to find out!
    m_Metadata:
      m_Items: []
  - m_Id: 42477544950808576
    m_Localized: 'Here we do a hack first! We alter the file type. Adding a Bitmap
      Image header to any bytes, allows us to convert it into a bmp file. The added
      BMP header instructs image viewers to interpret the following bytes as image
      data, that is: it interprets every byte as a pixel color value. Hope is to
      reveal patterns in the binary code. Go!'
    m_Metadata:
      m_Items: []
  - m_Id: 42483242799546368
    m_Localized: In the case of .com, we mostly see a rather random-looking collection
      of pixels. However, there are several rough structures or horizontal bars across
      the image. This could be different areas in the code, or different subprograms
      that have been bundled together in the final exe file.
    m_Metadata:
      m_Items: []
  - m_Id: 42484409675890688
    m_Localized: "The last version of .com was created on a Macintosh, here we see
      OSX paths starting with \u201CHD:\u201D. "
    m_Metadata:
      m_Items: []
  - m_Id: 42487075441295360
    m_Localized: 'Due to the special nature of the Director files, it is possible
      to recover a large part of the original source code from the compiled exe files
      of the .com browser. For this purpose, ProjectorRays Shockwave Decompiler can
      be used. '
    m_Metadata:
      m_Items: []
  - m_Id: 42495920326656000
    m_Localized: "\"An example: Thus, it became obvious that the first version (2001)
      allowed the launching of actions via keyboard commands. \nPressing s = beeping
      screenshotting. \nPressing q = aborted a specific operation for all five tabs.
      \nThese lines of code were removed from later versions of .com.\""
    m_Metadata:
      m_Items: []
  - m_Id: 42497745423515648
    m_Localized: 'Remember we retrieved four exe files for .com from the Wayback
      Machine? '
    m_Metadata:
      m_Items: []
  - m_Id: 42503310119878656
    m_Localized: 'With the help of the restored source code of the four different
      .com versions, the changes to the code over time can now also be recognized. '
    m_Metadata:
      m_Items: []
  - m_Id: 42503337147973632
    m_Localized: For example, entire function blocks have been removed or added while
      some parts of the code have only minimal adaptations.
    m_Metadata:
      m_Items: []
  - m_Id: 42503357528096768
    m_Localized: If you look back at center stage, you see how comparing two exe
      versions can look like!
    m_Metadata:
      m_Items: []
  - m_Id: 42506029886947328
    m_Localized: With a text or an image viewer, non-printable bytes could be overlooked.
      To capture all the bytes of an executable, it can be viewed in a hex editor.
      We use 010 Hex Editor.
    m_Metadata:
      m_Items: []
  - m_Id: 42506695950811136
    m_Localized: "Scrolling towards the last fifth of the exe file as viewed in a
      hex editor, some visually organized configurations surfaced. In the 010 Hex
      Editor we use, purple highlighting refers to the printable areas of the code
      (ASCII range 0-9a-zA-Z). The corresponding bytes lie in the \u2018resources\u2019
      section of the library \u201Cproj.dll\u201D which is also only a part of the
      .com exe. In this section, resources like logos are integrated using an uncompressed
      bitmap format."
    m_Metadata:
      m_Items: []
  - m_Id: 42506963635486720
    m_Localized: "The bitmap files look a bit different when rendered with a hex
      editor rather than with an image viewer. The figure in the left shows part
      of the exe code as bytes in 010 Hex Editor. The figure in the middle shows
      the same part of the code in the same program, but in a pixel-type version.
      The figure on your right is a screenshot from the reverse engineering tool
      \u201CGhidra\u201D which can recognize bmp files automatically and render them
      according to standard. "
    m_Metadata:
      m_Items: []
  - m_Id: 42507502402224128
    m_Localized: "Now we recognize the logos for Director also in the hex rendering.
      Due to the endianness \u2013 a term that describes the order in which a sequence
      of bytes is stored in a computer memory \u2013 they are presented upside down."
    m_Metadata:
      m_Items: []
  - m_Id: 42519382986407936
    m_Localized: 'It is not uncommon for pictures to be included in a compiled exe
      file. Here are two further examples: '
    m_Metadata:
      m_Items: []
  - m_Id: 42521696413499392
    m_Localized: 'These bitmap images will probably have been saved in the embedded
      library. They then somehow come through in the last fifth of the exe file.
      This is usually the site where the libraries are embedded. The first one shows
      a custom cursor, the second shows probably the community mascot. If you click
      on the picture on the left, you get revealed what it looks like. '
    m_Metadata:
      m_Items: []
  - m_Id: 42525973068464128
    m_Localized: This is how the cursor looks in the application!
    m_Metadata:
      m_Items: []
  - m_Id: 42527607014113280
    m_Localized: 'Nice! But be aware: technically, this is not ASCII art! Let us
      see what the difference is and for this we need to continue our journey!'
    m_Metadata:
      m_Items: []
  - m_Id: 42528202315874304
    m_Localized: A typical ASCII art piece in an exe file has a somewhat different
      look and feel. Here is an example!
    m_Metadata:
      m_Items: []
  - m_Id: 42529401119260672
    m_Localized: In contrast to the bitmap files, where the pixel values (from 00
      to FF) are to be seen as patterns in the hex editors, ASCII art is always visible
      as ASCII. In order to see that, you do not necessarily need a hex editor. Any
      text editor would do it as well.
    m_Metadata:
      m_Items: []
  - m_Id: 42529539443212288
    m_Localized: "In order to insert ASCII motives into the executable, there needs
      to be \u2018free space\u2019 for it. How to carve that out? Here are three
      possible methods:"
    m_Metadata:
      m_Items: []
  - m_Id: 42530225912365056
    m_Localized: 'JODI indeed foresaw a public that reads their messages on the HTML
      code level. See their previous work wwwwwwwww.jodi.org (1995) where they famously
      showed the principle of an atom bomb or erotica. '
    m_Metadata:
      m_Items: []
  - m_Id: 42532876611829760
    m_Localized: 'You see here examples where JODI placed ASCII pictures in the HTML-code:
      "wwwwwwwww.jodi.org" (1995) shows diagrams of an atom bomb and the other examples
      shows twelve figures of their "girly calendar".'
    m_Metadata:
      m_Items: []
  - m_Id: 42537272062066688
    m_Localized: 'But remember: HTML code is not equal to the exe code! Nonetheless,
      JODI *could have* found a way to insert a bitmap or to insert an ASCII figure. '
    m_Metadata:
      m_Items: []
  - m_Id: 42537542045220864
    m_Localized: However, in .com JODI does not seem to have placed a visual riddle
      on the exe file level as it is a Macromedia logo. Thus, the figurative configuration
      in the exe originates probably from a default setting of the programming environment.
    m_Metadata:
      m_Items: []
  - m_Id: 42537819200634880
    m_Localized: 'Ending this excursus, on how graphical configurations can end up
      becoming visible in a compiled code, we return to our close analysis of .com:
      Up to now we looked at the executable as a site where we could extract textual
      or visual information. However, it is primarily an operative, machine actionable
      entity. '
    m_Metadata:
      m_Items: []
  - m_Id: 42860707840692224
    m_Localized: "Reading static code is only half of the story! Further, we should
      not overestimate the insights we can gain from the written source code because,
      sometimes, the code is not fully understandable without being executed. On
      execution, interesting artifacts may be created that would be overlooked if
      we merely reviewed the written code. The code alone may not be very exciting,
      if its individual parts are always considered separately from each other. We
      only see the full picture when they are all put together. And moreover, net.art
      artworks come to life when \u2018executed\u2019. So, let us explore \u2018the
      other half\u2019 of the story!"
    m_Metadata:
      m_Items: []
  - m_Id: 42861189845913600
    m_Localized: "Thus, we are transitioning towards the dynamic code analysis! Several
      forensic tools allow the knowledgeable user to shed light onto the interaction
      of the browser with the websites. Dynamic analysis uses tools to see and examine
      what is happening during the \u2018runtime\u2019 of an artwork. It can focus
      on three different entangled levels: "
    m_Metadata:
      m_Items: []
  - m_Id: 42861382557405184
    m_Localized: "red light: the system level looks into how the program is implemented
      in the local computer \norange light: The level of the perceivable GUI output
      which shapes the human experience. More on that in the GREEN ROOM! \ngreen
      light: the network level traces what happens on the interface with the internet
      or a networked cluster."
    m_Metadata:
      m_Items: []
  - m_Id: 42861625722179584
    m_Localized: Let us analyse the network!
    m_Metadata:
      m_Items: []
  - m_Id: 42861957068001280
    m_Localized: Look through the portal into the green room to learn more about
      how the dynamic dimension of .com can be experienced.
    m_Metadata:
      m_Items: []
  - m_Id: 42862847694901248
    m_Localized: Sorry, we skipped the system analysis. The green light is your path
      forward!
    m_Metadata:
      m_Items: []
  - m_Id: 42863667614224384
    m_Localized: "Since .com is a \u201Cbrowser\u201D it should be no surprise that
      it interacts with the internet and sends out requests to websites. To understand
      the behavior at network level, the tool Wireshark can be used. Let us start
      Wireshark first and run it in the background, then COM.exe can be executed.
      Wireshark creates a recording of the network traffic. "
    m_Metadata:
      m_Items: []
  - m_Id: 42864720216756224
    m_Localized: 'As expected, we find DNS requests that resolve the URL to an IP
      and HTTP requests that query the HTML of the web pages. Some of the web pages
      give unexpected HTTP responses. COM.exe sends only a simple HTTP GET request.
      COM.exe regularly tries to call new pages at certain measurable intervals. '
    m_Metadata:
      m_Items: []
  - m_Id: 42865773020614656
    m_Localized: Director was developed during an early age of the internet. As a
      result, it can only handle hypertext in the original state, the first version
      developed by Tim Berners-Lee in 1990. While it does manage to incorporate coloured
      links (<a></a>) into the rendering, CSS is already beyond its scope. It is
      not interpreted adequately, much less shown correctly.
    m_Metadata:
      m_Items: []
  - m_Id: 44672569407442944
    m_Localized: "Let us do another hack! In order to dig a bit deeper into .com\u2019s
      dynamic behaviour, we can intercept the network traffic. "
    m_Metadata:
      m_Items: []
  - m_Id: 44678323417911296
    m_Localized: "This way we learn that .com has problems with HTTP success status
      responses that are not \u201C200 OK\u201D, the standard response indicating
      a successful HTTP request. For instance, if the response returned is \u201CHTTP/1.1
      200 Service Temporarily Unavailable\u201D it shows the HTTP header and the
      code completely as text."
    m_Metadata:
      m_Items: []
  - m_Id: 44676794308890624
    m_Localized: With the Burp Suite tool it is also possible to send arbitrary responses
      back to the .com browser. Thus, it is possible to try out the different response
      codes of the HTTP protocol (200, 302, 404, 500 etc.) and observe live how the
      browser behaves.
    m_Metadata:
      m_Items: []
  - m_Id: 44678545825075200
    m_Localized: Did you notice the ghostly frames sometimes shown in .com?
    m_Metadata:
      m_Items: []
  - m_Id: 44678767007502336
    m_Localized: "What are these formattings? \nWe know from the artists, they are
      not meant to show up in .com. However, almost every one of JODI\u2019s eleven
      official %WRONG Browsers exhibits this curious leaking phenomenon. It can be
      explained with the following review of Macromedia Director 7: \u201CAlso new
      is the ability to import HTML files with most formatting intact. [\u2026] Director
      7 does a reasonably good job of retaining a page\u2019s formatting tags.\u201D
      In other words, in the eyes of the software engineers, it is a feature!"
    m_Metadata:
      m_Items: []
  - m_Id: 44679748302671872
    m_Localized: "Here\u2019s something for detectives: We have learned earlier,
      .com cannot interpret Cascaded Style Sheets (CSS) in its operative form, that
      is, it cannot interpret its formatting commands, it can only read it out as
      plain text. So, whenever we encounter the ghostly frames and tables in the
      output, it should never be done by CSS, right? It must be done with plain HTML,
      right? That is generally correct, but: A website can have used CSS \u2013 and
      if that is created through a JavaScript \u2013 this does not show up in what
      .com picks. "
    m_Metadata:
      m_Items: []
  - m_Id: 44680022958280704
    m_Localized: 'As a consequence, also a modern CSS based website can result in
      .com showing formatting remnants. '
    m_Metadata:
      m_Items: []
  - m_Id: 44680213375488000
    m_Localized: "With a little dedication and effort, we can learn something about
      the making-of behind the scenes of the websites. In other words, to a certain
      degree, JODI\u2019s .com browser can be misused as a \u2018special interest\u2019
      forensic tool."
    m_Metadata:
      m_Items: []
  - m_Id: 44680505395515392
    m_Localized: 'Taking the last two conclusions together, we have a seeming paradox
      at hand: The code is neat and the situation is messy.'
    m_Metadata:
      m_Items: []
  - m_Id: 44681174978400256
    m_Localized: "Functionality first: A pragmatic dimension\nJODI\u2019s browsers
      survived so many internet updates because they are not reliant on any online
      platform or service beyond the artists\u2019 control. They were programmed
      in a pragmatic way without any extra acrobatics. In their programming, JODI
      streamlined functionality. The code worked for decades. It is neat."
    m_Metadata:
      m_Items: []
  - m_Id: 44681381182967808
    m_Localized: "Permeating porous parts: A leaky dimension\n.com\u2019s coded fabric
      has porous traits. Intentionally or not, our analysis reveals a leaky behaviour
      of code showing up in unsuspected places.\na)\_\_\_ parts of CSS code of a
      called website are presented together with website contents in the formatted-text
      of the browser.\nb) a short historical dimension persists in the present and
      the contents of two websites superposition in the formatted-text of a tab.
      \nc)\_\_\_ layout remnants of the shown website \u2013 tabs, lines, coloured
      planes, big headlines \u2013 make it into .com whilst JODI\u2019s browser supposedly
      supports text-only.\nd)\_\_\_\_ snippets of source code commands survive the
      compilation of the executable and can be recovered in the strings.\ne)\_\_\_
      ghostly figurative configurations were retrieved in the library section of
      the exe file as seen through a hex editor."
    m_Metadata:
      m_Items: []
  - m_Id: 72819823479730176
    m_Localized: 'Artistic Composition

      Niki de Saint Phalle: Volleyball, 1993.'
    m_Metadata:
      m_Items: []
  - m_Id: 78623294325895168
    m_Localized: 'Analytic Decomposition

      Ursus Wehrli: ''tidied up''-version
      of Volleyball, 2002.'
    m_Metadata:
      m_Items: []
  - m_Id: 78623739740008448
    m_Localized: 'Derived Typology

      This is what we are now going to do. You
      can witness it upstairs.'
    m_Metadata:
      m_Items: []
  - m_Id: 78627881954947072
    m_Localized: 'The dissecting involves two steps, as shown with the colourful
      print on the left: We start with the artistic composition, we disassemble its
      parts and order them our parameters, and finally, we reduce these ordered elements
      to come up with an element typology.'
    m_Metadata:
      m_Items: []
  - m_Id: 79335692033843200
    m_Localized: 'You have just encountered all 18 discernible types of elements
      in this browser. However, even a brief initial characterization reveals that
      they have different properties: some are reliably there, others are not.'
    m_Metadata:
      m_Items: []
  - m_Id: 79337827907657728
    m_Localized: "Having learnt about all the element types \u2026 the picture becomes
      more complicated when we look at the history of the .com browser. The current
      version of .com browser evolved over time. Thus, in older screenshots we can
      detect differences. Do you notice some?"
    m_Metadata:
      m_Items: []
  - m_Id: 79340629966970880
    m_Localized: "We will learn about JODI\u2019s colour scheme later, but what is
      striking here is how colours deviate from the primary and secondary colours.
      And the scrollbars look different from those in the screenshot on the left."
    m_Metadata:
      m_Items: []
  - m_Id: 79348843651522560
    m_Localized: Here we have black history-squares. However, the lists of the histories
      are topped by a black circle that has no URL on its right side. And the scroll-bars
      are missing.
    m_Metadata:
      m_Items: []
  - m_Id: 79354385899970560
    m_Localized: Do you see the black square frames surrounding the pentagon-balls?
      They also appear around the URL-squares. The history-squares are always in
      black and not yet in the colour of the website-tab they are attached to.
    m_Metadata:
      m_Items: []
  - m_Id: 79359950143348736
    m_Localized: Users who know only these three screenshots will notice a lot of
      differences between them. They may even doubt it is the same artwork.
    m_Metadata:
      m_Items: []
  - m_Id: 79360918557810688
    m_Localized: "These differences mean that the description of the inventory of
      elements provided in the first move: dissect and present, introduced above,
      is contingent as it is specific for our version of .com of 2023. The artists
      may have incorporated elements of the used operating systems. They may have
      reprogrammed the work for aesthetic reasons. Were there also functional changes?
      Why don\u2019t we know that?"
    m_Metadata:
      m_Items: []
  - m_Id: 79366728696455168
    m_Localized: Two elements allow to move them - and with them comes a whole entourage
      - in all directions. In each case a resizing happens in some of the elements.
    m_Metadata:
      m_Items: []
  - m_Id: 79367986845048832
    m_Localized: 'When pressing the ENTER key, different things can happen: When
      used in the context of URL texts, this triggers the URL call. When used in
      the HTML-text-field it causes a break line.'
    m_Metadata:
      m_Items: []
  - m_Id: 79375581114785792
    m_Localized: The two balls on the middle-bar can be moved horizontally by the
      user. However, whenever a URL call is active one of the balls hurries hectically
      left to right and vice versa. In this case (blue rendering) the user can just
      watch.
    m_Metadata:
      m_Items: []
  - m_Id: 79376633356607488
    m_Localized: The whole point of a web browser is launching a URL call and retrieving
      the website. The user can choose four different paths towards that URL call.
      If the user decides not to do anything, the browser will regularly/irregularly
      anyway start a call.
    m_Metadata:
      m_Items: []
  - m_Id: 79377251878035456
    m_Localized: The users can mark all the texts they can edit. In such a case,
      the background colour changes.
    m_Metadata:
      m_Items: []
  - m_Id: 79377666635980800
    m_Localized: This loudspeaker symbolises sound events. It is rendered in blue
      as this is something that cannot be triggered directly by the user. It gets
      started by the system and happens during every URL call process, independently
      of how this URL call was initiated. The four scenarios show how a user can
      actively work towards a sound event.
    m_Metadata:
      m_Items: []
  - m_Id: 79379025816969216
    m_Localized: The users have several possibilities to edit (write, delete) the
      available text fields. These fields can also be marked.
    m_Metadata:
      m_Items: []
  - m_Id: 79379588893892608
    m_Localized: The button of the scroll-bar can be moved up and down. The HTML
      text then moves in the opposite direction.
    m_Metadata:
      m_Items: []
  - m_Id: 79381329773322240
    m_Localized: Double-clicking on the two buttons indicated, triggers a URL call
      with the URL attached to the button.
    m_Metadata:
      m_Items: []
  - m_Id: 79383010284134400
    m_Localized: The two buttons that allow to reposition themselves directly, do
      also resize some elements. For instance, the pentagon-line is always impacted
      in its length when any of its pentagon-balls attached to its ends move. The
      complex case of the variant with the URL square is discussed later, upstairs,
      immediately after encountering 'protagonist 2'.
    m_Metadata:
      m_Items: []
  - m_Id: 79684098999562240
    m_Localized: 1, 5, 6, 7, 8, 9, 12, 14, 17 move together stiffly if 12 (URL-square)
      takes the lead.
    m_Metadata:
      m_Items: []
  - m_Id: 79690546479476736
    m_Localized: 1, 5, 6, 7, 8, 9, 14, 17 move together flexibly if 14 (pentagon-ball)
      takes the lead.
    m_Metadata:
      m_Items: []
  - m_Id: 79691491758157824
    m_Localized: 7, 17 move in opposite directions if 17 (scroll-bar) takes the lead.
    m_Metadata:
      m_Items: []
  - m_Id: 79692081728958464
    m_Localized: '2, 10, 11, 13, 16 happen simultaneously: they all perform the URL
      call process. You can learn more about it one level higher: watch out for the
      label ''entertainment program''.'
    m_Metadata:
      m_Items: []
  - m_Id: 79692611507302400
    m_Localized: '2, 3 happen consecutively: 2 (grey-field) foreshadows 3 (formatted-text).'
    m_Metadata:
      m_Items: []
  - m_Id: 79693097283203072
    m_Localized: (3, 15) (5, 9) (10, 13) stick together stiffly, they cannot be separated,
      they keep the exact distance and position to each other.
    m_Metadata:
      m_Items: []
  - m_Id: 79693668132171776
    m_Localized: 6, 14 stick together flexibly, they cannot be separated, but the
      angle of their position to each other changes with each movement.
    m_Metadata:
      m_Items: []
  - m_Id: 79694131263025152
    m_Localized: '(4, 13) (4, 15) (1, 7) one contains the other: 4 (middle-bar) is
      the environment for the two balls. The balls can move within/along the middle-bar,
      but cannot leave it, thus it could be seen as a variant of ''stick together
      flexibly''. The same holds for the HTML-text-field that sits always inside
      or on top of the HTML-colour-field.'
    m_Metadata:
      m_Items: []
  - m_Id: 79695533456601088
    m_Localized: All elements are at least loosely entangled with each other, with
      the exception of the potentially decoupled cursor the user navigates with,
      the static middle-bar, and the highly ephemeral elements.
    m_Metadata:
      m_Items: []
  - m_Id: 79699664556634112
    m_Localized: 'Have you found all nine instances of tight coupling? As well as
      the one big loose coupling complex? This complex includes all elements except
      for the middle-bar and the highly ephemeral fields that appear only in the
      search process. '
    m_Metadata:
      m_Items: []
  - m_Id: 80239983022944256
    m_Localized: 'Most of the elements in the background (1-3, 5-6, 9, 16) tend not
      to respond to any direct user input. The ones that can be reached somehow,
      are attached to another element that is interactive. '
    m_Metadata:
      m_Items: []
  - m_Id: 80244113942622208
    m_Localized: Some elements shrink (8 =>5; 12=>9) and as miniatures, they multiply
      (5, 9)
    m_Metadata:
      m_Items: []
  - m_Id: 80287259607019520
    m_Localized: "Have you noticed an overall tendency? The elements situated in
      the background are monochromatic colour-fields, the middle ground is populated
      by text-fields and the foreground is where buttons of various kinds reside.
      Thus, there is order in the layering of types of elements along subtypes: points,
      texts fields, lines and colour fields are each in their layer sectors \u2013
      with some exceptions."
    m_Metadata:
      m_Items: []
  - m_Id: 80287451580313600
    m_Localized: Some of the complexes are quite spread out in depth on layers that
      are a considerable distance apart. Obviously, this functional clustering was
      not the guiding principle when defining what element sits on which layer.
    m_Metadata:
      m_Items: []
  - m_Id: 80306080598306816
    m_Localized: In the .com browser, one website is depicted within a tab field
      complex. As the tab field complex is a mix of buttons, texts and colour fields,
      its configuration has much depth. This stretched-out three-dimensionality is
      an important factor as soon as further tab field complexes enter the scene.
    m_Metadata:
      m_Items: []
  - m_Id: 80306458001780736
    m_Localized: 'Turning the website around and turning around the website

      The
      tab field complex is attributed a flipping or turning window because on the
      one hand it is a window to the internet as it harbours the website content.
      On the other hand, the browser seems to provide a back-side view of websites
      in two different ways. The first of these is always provided, the second can
      be reached by interacting with it. '
    m_Metadata:
      m_Items: []
  - m_Id: 80306665934401536
    m_Localized: Normally, the HTML code of a website is occluded from the users,
      who need to go an extra step to have it displayed in their commercial browser.
      In .com, the HTML-code fills what the users will interpret as the tab field
      complex in a rather large and easy to read font. It seems to have been brought
      closer for inspection than its formatted-text version.
    m_Metadata:
      m_Items: []
  - m_Id: 80308841431805952
    m_Localized: "The affordance of these two elements also underlines that reversal.
      The user can edit the HTML code text, but cannot even mark the formatted-text.
      Thus, JODI seem to swap surface and \u2018subface\u2019 (to use Frieder Nake\u2019s
      expression), that is, the GUI level and the code level. However, the HTML code
      can only be reworked if a second instance of flipping hasn\u2019t turned it
      away from the user\u2019s sight. So, what could turn the HTML-text-field \u2018away\u2019? "
    m_Metadata:
      m_Items: []
  - m_Id: 80311102912442368
    m_Localized: 'Our next protagonist is the pentagon complex:

      It is shown
      here as two elements coupled, but it is optically complete only with all five
      pentagon complexes. As it also turns or flips parts of the website, it shares
      the same attribute as the tab field complex. '
    m_Metadata:
      m_Items: []
  - m_Id: 80312640040972288
    m_Localized: "This second instance of flipping the displayed website is associated
      with the upper left corner of the HTML-colour-field. As the HTML-colour-field
      can sit anywhere in the viewport, its upper left corner is not a fixed coordinate
      value, but is position-sensitive and thus variable. Drawing a horizontal and
      a vertical line through this point, cuts the viewport plane into four sectors
      that have different \u2018properties\u2019 for this specific tab field complex. "
    m_Metadata:
      m_Items: []
  - m_Id: 80313335821479936
    m_Localized: 'The operator with which the differences in the sectors can be performed
      and shown is the corresponding pentagon-ball. When you move the pentagon-ball
      with the mouse (here shown as a circular movement), the HTML-colour-field will
      follow the movement by adjusting its size. At the moment, when this movement
      touches the left and/or the top side of the HTML-colour-field, it seems to
      flip around a mirroring hinge. '
    m_Metadata:
      m_Items: []
  - m_Id: 80313553841401856
    m_Localized: "The horizontal distance of the pentagon-ball to the left border
      of the HTML-colour-field determines the width of the latter. It does not matter
      whether the pentagon-ball is left or right of the left HTML-colour-field edge,
      the HTML-colour-field will always stretch sideward to the right. The same holds
      for the top edge. No matter whether the pentagon-ball is below or above it,
      its distance is rendered as the height of the HTML-colour-field and is always
      oriented downwards. As a consequence, the URL-square always sits on the left
      top of the HTML-colour-field and is never superposed by the HTML-colour-field,
      no matter from where the pentagon-ball determines the latter\u2019s size. This
      also conveys the impression that there is one \u2018frontal\u2019 rendering
      (only when the pentagon-ball is in the bottom right quarter) and all three
      other quarters reverse the situation so that the HTML code disappears. This
      is the second kind of flipping that withdraws the HTML code. This second instance
      of withdrawing the HTML code is only due to user interventions. One could thus
      say that the user interventions are augmenting the variance of possible situations
      because they can make the HTML code disappear. Thus, it turns out it is actually
      the users who are causing the \u2018disorder\u2019 by rendering the situation
      less legible. "
    m_Metadata:
      m_Items: []
  - m_Id: 80313905068224512
    m_Localized: "A comparison with a runtime analysis without user interaction helps
      to explain the reasons. This comparison is possible as the browser has an autopilot
      mode, it runs the URL calling autonomously. But there are some actions it doesn\u2019t
      do by itself. In the autopilot mode the browser will never resize the HTML-colour-fields,
      the pentagon complex always hovers in the lower right corner of the tab field
      complex. That is, per default, the pentagon complex seems to support or span
      open the HTML-(colour/text)-fields from below. Left by itself, .com always
      shows the HTML code if there is one to show. Moreover, the pentagon complex
      will occupy only the lower right sector of the browser display. This fact has
      to do with the distribution of the URL-squares on the viewport and the default
      size of their HTML-colour-fields. If a URL-square sits on the top left corner,
      the position of the pentagon-ball of the same colour is somewhere in the middle
      of the monitor (which then is its utmost left and upper border in the viewport
      a pentagon-ball can ever reach in an autopilot run of the browser)."
    m_Metadata:
      m_Items: []
  - m_Id: 80314557307662336
    m_Localized: 'As the HTML-colour-fields may extend beyond the viewport on the
      left and bottom, but the corresponding pentagon-balls cannot follow it into
      the realm of the unseen, all positions of the pentagon-balls beyond the viewport
      are indicated as being within the outer edge. Thus there is a certain accumulation
      of pentagon-balls on the bottom right. '
    m_Metadata:
      m_Items: []
  - m_Id: 80319115639500800
    m_Localized: The search facilitating complex is depicted by the red carpet it
      is rolling out for the users. Although not obvious at first glance, .com browser
      offers the user four different ways to start the web search for each website
      tab.
    m_Metadata:
      m_Items: []
  - m_Id: 80319904290287616
    m_Localized: 'Contrary to the general impression of bulkiness, in several ways
      .com surpasses conventional browsers in paving a way into the internet. First,
      each URL is present twice and both can be used to start a search. A search
      can be initiated by typing in a URL either in the URL-text-field or in the
      middle-bar-URL-text-field and pressing enter, or by double-clicking on the
      URL-square or on the middle-bar-URL-ball respectively. Thus, the opportunities
      to go and explore a website by chance or by intention are heightened. '
    m_Metadata:
      m_Items: []
  - m_Id: 80320639350452224
    m_Localized: 'A visual statistic accumulating the positions of all the pentagon-balls
      over 20 minutes of run-time without user interventions, reveals this implicit
      rule. '
    m_Metadata:
      m_Items: []
  - m_Id: 80320978619314176
    m_Localized: .com offers user friendliness through multiple entry points.
    m_Metadata:
      m_Items: []
  - m_Id: 80324776716775424
    m_Localized: "The search performing complex symbolically waves a red flag as
      it seeks to gather all the user\u2019s attention. Even if users may be overwhelmed
      and have the impression that they need to fight to get to the internet content,
      the browser is actually emphasizing the core business of any browser, namely
      the event of the search process."
    m_Metadata:
      m_Items: []
  - m_Id: 80325171367227392
    m_Localized: "Here, multiple instances indicate that something is happening.
      The URL calling process is accompanied by a hectic horizontal movement pushing
      around the corresponding URL, by sound, by a colour change of the URL and by
      various fields popping up: grey and the \u2018own\u2019 colour, a field behind
      the URL. All these signals indicate that something is \u2018coming\u2019 from
      the internet. It is reminiscent of the good old letter shoot. While the website
      data parcel is underway, a specific sound accompanies its journey and a different
      gong advertises its arrival. The box can contain something or can be empty.
      In this light, the horizontal middle-bar containing the balls also mimics the
      old medium of postal transmission. The difference is only that their hectic
      back and forth movements symbolize the requirement in the networked world that
      the various bits and pieces of information must be gathered from different
      sites. The middle-bar indicates prominently that a search is taking place by
      serving as a highway for a nervous race. This is a rather different picture
      than the floating, orbiting and circling in outer space shown by other throbber
      animations. "
    m_Metadata:
      m_Items: []
  - m_Id: 80325768032137216
    m_Localized: "And all this performed excitement has yet another effect: the long
      waiting time that was a major part of the early days of the internet, here,
      is filled with action. Users can lean back and enjoy the spectacle. This kind
      of jingle-entertainment is performed by six elements. Isn\u2019t that again
      contributing to an improved user experience?"
    m_Metadata:
      m_Items: []
  - m_Id: 80325996600733696
    m_Localized: ".com provides jingles and suspense \u2013 and thus emphasizes search
      and delivery."
    m_Metadata:
      m_Items: []
  - m_Id: 80326208547303424
    m_Localized: Each of the protagonists is attributed a symbol signaling their
      main gesture, for which they are regarded as playing a crucial role in this
      browser. These gestures respectively are already the result of an interpretation.
    m_Metadata:
      m_Items: []
  - m_Id: 80381285899284480
    m_Localized: "Inserting all the elements that are displayed simultaneously, shows
      that the layering order first follows the element types, and that within an
      element type there is a strict colour order: Red is always 1, green 2, blue
      3, yellow 4, cyan 5. These layers build from the back towards the front. According
      to JODI\u2019s numbering, 1 is always at the very back while 5 is at the front. "
    m_Metadata:
      m_Items: []
  - m_Id: 80382549815046144
    m_Localized: "While the opaque representation allows the user to determine clearly
      what is in front and what behind, the transparent representation allows text
      to shine through. Moreover, the colours in the overlapping sections of colour-fields
      may change. \r\nWhat does \u2018may change\u2019 mean? Where is the rule?"
    m_Metadata:
      m_Items: []
  - m_Id: 80383003483549696
    m_Localized: "Here we deal with a simple subtractive colour mix with perfect
      filters \u2013 which means the colours as filters absorb a 100% of the opposite
      colour. Red absorbs 100% of green and blue, green absorbs 100% blue and red.
      Superposing a red and a green filter, for instance, then all light is absorbed,
      turning the result into black."
    m_Metadata:
      m_Items: []
  - m_Id: 80383128666746880
    m_Localized: "There are four exceptions that do not turn black when overlapping:
      Yellow and cyan together turn green, moreover, yellow \u2018suffocates\u2019
      (has no effect) when overlapping with green or with red. Cyan \u2018suffocates\u2019
      in blue and green."
    m_Metadata:
      m_Items: []
  - m_Id: 80383401078403072
    m_Localized: "The browser is so complex that even when the user attempts to put
      on \u2018order\u2019 filter on it incorporating all the 4-5 measures, it always
      offers the performative eventfulness and visual complexity. This room spoke
      to an analytic-cognitive mindset favouring rules for prediction and explanation
      over enchantment. The sum of insights is, in short, that things appear different
      at second glance. Apparently irregular and arbitrary positions and processes
      actually follow rules. Aspects that seem to be utterly different from familiar
      browsers or the embodiment of user-un-friendliness, turn out to indeed emphasize
      the browser functions in a multimodal firework display that provides users
      with more entry points for launching a URL calling than any other browser. "
    m_Metadata:
      m_Items: []
  - m_Id: 81171591377969152
    m_Localized: In terms of the used colour scheme, we deal with a simple subtractive
      color mix.
    m_Metadata:
      m_Items: []
  - m_Id: 91543032749350912
    m_Localized: The room can be approached both as an experiential encounter in
      its own right, and as a specialised filter that reveals a qualitative aspect
      of the artwork, grounded in quantifiable data.
    m_Metadata:
      m_Items: []
  - m_Id: 91543734750011392
    m_Localized: Elements found in JODI's browser are not particularly uncommon compared
      to those of a conventional web browser. This becomes evident when these elements
      are imagined in a more standard layout. However, the arrangement of these elements
      differs significantly, as do their functional affordances.
    m_Metadata:
      m_Items: []
  - m_Id: 91543988857724928
    m_Localized: By segmenting runtime samples into major movements, minor movements,
      and clustering, and analysing a focused 10-minute screen recording of autonomous
      browser behaviour, we can gain valuable insights into deviations from conventional
      browser norms and their effects on layout clarity and accessibility.
    m_Metadata:
      m_Items: []
  - m_Id: 91544972874997760
    m_Localized: By analysing samples of changing screen compositions and using colour
      distribution data, we can quantitatively visualise how dominant colours impact
      element clustering and available space, revealing how layout changes affect
      overall screen organisation
    m_Metadata:
      m_Items: []
  - m_Id: 91545084367986688
    m_Localized: "By refining the data from the third stage to establish relationships
      and assign weights, we can better understand the impact of significant and
      minor movements, clustering, and time-based intervals on deviations from conventional
      browsers, ultimately deriving a \u2018dissonance value\u2019 that characterises
      how %WRONG Browser .com compares to standard web browser conventions."
    m_Metadata:
      m_Items: []
  - m_Id: 91545122867503104
    m_Localized: The dynamic model provides an immersive exploration of the .com
      browser's deviation from conventional browsers through its observable runtime
      events.
    m_Metadata:
      m_Items: []
  - m_Id: 98777627471372288
    m_Localized: Here we see an integrated commercial browser model. The collage
      of Netscape 6 for Windows (2000), Internet Explorer 8 for Windows (2009), Chrome
      for Macintosh (2022), and Firefox 123.0.1 for Windows (2024) displaying different
      Wikipedia pages represents the consistency over time in the standardised functionality
      and layout of conventional browsers. These are primarily centred around a single
      field rendering the content of a specific webpage, with the option to have
      multiple tabs open or not.
    m_Metadata:
      m_Items: []
  - m_Id: 98778107555602432
    m_Localized: In contrast to the integrated commercial browser model, the %WRONG
      Browser .com features five web pages displayed in 10 fields at all times. While
      their function is similar to tabs within a browser window, they behave more
      like individual windows. The color-coded HTML field can be moved by the user,
      resized, stacked, and arranged freely. Additionally, each of them has its own
      address and scroll bar.
    m_Metadata:
      m_Items: []
  - m_Id: 98801395681976320
    m_Localized: To determine this parameter, we examined the colour distribution
      of the display. The background colour of the display is white, and even without
      any user interaction, the sizes of the HTML fields are constant, although they
      can be cropped by the viewport. Considering that the HTML code is most legible
      within the display and that the formatted text fields stack on top of each
      other without user interaction, it was possible to draw conclusions regarding
      how colour distribution may influence the display's closeness to the envisioned
      layout, that is clearly structured and organised and therefore easier accessibility.
      The autonomous behaviour of the movements is analysed in the CYAN ROOM.
    m_Metadata:
      m_Items: []
  - m_Id: 104223992892612608
    m_Localized: "Congratulations!\n\nYou have completed the journey through our
      findings about \u201C.com\u201D! Each of the researchers of the group took
      a different route to explore the \u201C.com\u201D.COM browser, but our approaches
      have many meeting points and work together as a toolset to tackle this very
      complex object of study from different perspectives. You accomplished the equivalent
      of reading a book. By the way, this study also exists as a  book \u2026 and
      as an extended poster version of this game. Just in case, you want to hold
      something in your hands!\n\nThere is a last coin for you to collect \u2026\n\nThanks
      for joining us and - literally - walking through our trains of thought!"
    m_Metadata:
      m_Items: []
  - m_Id: 104224980672176128
    m_Localized: You have missed some coins. If you go back to collect them, there
      will be a surprise waiting for you when you come back here...
    m_Metadata:
      m_Items: []
  references:
    version: 2
    RefIds: []
